//💜함수의 파라미터에 타입을 정의하는 방식
function sum2(a: number, b: number) {
  return a + b;
}
//파라미터의 타입을 지정해준다. 둘 다 number로 지정함
sum(10, 20);


//💜함수의 반환 값에 타입을 정의하는 방식
function add02(): number {
  //return 10;  
}
// 반환값을 정의하고 나면 number라는 값이 리턴되야하는데
// 리턴해주는 함수 로직에 리턴 될 값이 없으면
// number에 에러줄이 생긴다.


//💜함수에 타입을 정의하는 방식
function sum3(a: number, b: number): number {
  return a + b;
}

sum(10, 20, 30, 40);

//파라미터에 각 인자에 어떤 타입이 들어갈지 선언해주고,
//어떤 타입이 반환될지도 지정해주고, 리턴값도 넣어줘야 가장 기본적인 베스트 방식이다.
//sum3(a: number, b: number): number
//여기서 맨 마지막에 있는 number가 반환될 타입이다.
// 그리고 sum(10, 20, 30, 40);에 30,40은 허용되는 인자 갯수가 2개 뿐이라 에러가 난다.

//💜함수의 옵셔널 파라미터
function log(a: string, b?:string) {

}
log('hello world');
log('hello ts', 'abc');
//추가적으로 들어올 수 있는 파라미터에 대해서
//이 값이 바로 무조건 써도 된다. 쓰지 않아도 된다라고 하는 물음표 (?)를 넣어주면 된다!
//만약 b에 ?를 제거하면 첫번째 log에는 빨간줄로 에러표시가 생긴다.
//왜냐면 파라미터에 속한 인자는 2개인데, 출력해주는 값이 1개이기 때문이다.
// ?를 넣으면 써도되고 안써도되고를 설정해주는 것이라 에러표시가 안난다. 